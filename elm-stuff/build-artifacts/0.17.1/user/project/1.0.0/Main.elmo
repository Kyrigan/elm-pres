var _user$project$Main$tranSin = F2(
	function (t, y) {
		return (_elm_lang$core$Native_Utils.cmp(t, 0) < 0) ? 0 : ((_elm_lang$core$Native_Utils.cmp(t / 100, _elm_lang$core$Basics$pi / 2) > 0) ? y : (_elm_lang$core$Basics$sin(t / 100) * y));
	});
var _user$project$Main$trans = F2(
	function (t, y) {
		return (_elm_lang$core$Native_Utils.cmp(t, 0) < 0) ? 0 : A2(_elm_lang$core$Basics$min, t, y);
	});
var _user$project$Main$fadeOut = F2(
	function (t, n) {
		return _user$project$GraphicSVG$makeTransparent(
			1 - A2(_user$project$Main$tranSin, t - n, 1));
	});
var _user$project$Main$fadeIn = F2(
	function (t, n) {
		return _user$project$GraphicSVG$makeTransparent(
			A2(_user$project$Main$tranSin, t - n, 1));
	});
var _user$project$Main$appear = F2(
	function (x, n) {
		return (_elm_lang$core$Native_Utils.cmp(x, n) > 0) ? _user$project$GraphicSVG$makeTransparent(1) : _user$project$GraphicSVG$makeTransparent(0);
	});
var _user$project$Main$mod = F2(
	function (x, n) {
		var y = _elm_lang$core$Basics$toFloat(
			_elm_lang$core$Basics$floor(x / n));
		return x - (y * n);
	});
var _user$project$Main$disappear = F2(
	function (x, n) {
		return (_elm_lang$core$Native_Utils.cmp(x, n) > 0) ? _user$project$GraphicSVG$makeTransparent(0) : _user$project$GraphicSVG$makeTransparent(1);
	});
var _user$project$Main$loop = F2(
	function (t, n) {
		var y = _elm_lang$core$Basics$toFloat(
			_elm_lang$core$Basics$floor(t / n));
		return t - (y * n);
	});
var _user$project$Main$update = F2(
	function (message, model) {
		var _p0 = message;
		return _elm_lang$core$Native_Utils.update(
			model,
			{t: model.t + 4});
	});
var _user$project$Main$createLegend = F4(
	function (t, data, idx, _p1) {
		var _p2 = _p1;
		var _p6 = _p2._1;
		var _p5 = _p2._0;
		var _p3 = data;
		if ((_p3.ctor === '::') && (_p3._0.ctor === '_Tuple3')) {
			var _p4 = _p3._0._2;
			return A2(
				_elm_lang$core$List_ops['::'],
				A3(
					_user$project$Main$fadeIn,
					t,
					100,
					A2(
						_user$project$GraphicSVG$move,
						{ctor: '_Tuple2', _0: _p5, _1: _p6 - (25 * idx)},
						_user$project$GraphicSVG$group(
							_elm_lang$core$Native_List.fromArray(
								[
									A2(
									_user$project$GraphicSVG$move,
									{ctor: '_Tuple2', _0: -15, _1: 4},
									A2(
										_user$project$GraphicSVG$filled,
										_p4,
										_user$project$GraphicSVG$square(8))),
									A2(
									_user$project$GraphicSVG$filled,
									_p4,
									A2(
										_user$project$GraphicSVG$customFont,
										'Helvetica',
										A2(
											_user$project$GraphicSVG$size,
											12,
											_user$project$GraphicSVG$text(_p3._0._0))))
								])))),
				A4(
					_user$project$Main$createLegend,
					t - 100,
					_p3._1,
					idx + 1,
					{ctor: '_Tuple2', _0: _p5, _1: _p6}));
		} else {
			return _elm_lang$core$Native_List.fromArray(
				[]);
		}
	});
var _user$project$Main$createPie = F3(
	function (t, data, start) {
		var _p7 = data;
		if ((_p7.ctor === '::') && (_p7._0.ctor === '_Tuple3')) {
			var _p8 = _p7._0._1;
			return A2(
				_elm_lang$core$List_ops['::'],
				A2(
					_user$project$GraphicSVG$rotate,
					_elm_lang$core$Basics$degrees(start + (180 * _p8)),
					A3(
						_user$project$Main$fadeIn,
						t,
						100,
						A2(
							_user$project$GraphicSVG$filled,
							_p7._0._2,
							A2(_user$project$GraphicSVG$wedge, 100, _p8)))),
				A3(_user$project$Main$createPie, t - 100, _p7._1, start + (360 * _p8)));
		} else {
			return _elm_lang$core$Native_List.fromArray(
				[]);
		}
	});
var _user$project$Main$piechart = F4(
	function (t, data, start, _p9) {
		var _p10 = _p9;
		return _user$project$GraphicSVG$group(
			A2(
				_elm_lang$core$Basics_ops['++'],
				A3(_user$project$Main$createPie, t, data, start),
				A4(
					_user$project$Main$createLegend,
					t,
					data,
					start,
					{ctor: '_Tuple2', _0: _p10._0, _1: _p10._1})));
	});
var _user$project$Main$optGray = A3(_user$project$GraphicSVG$rgb, 128, 133, 133);
var _user$project$Main$optGold = A3(_user$project$GraphicSVG$rgb, 204, 194, 16);
var _user$project$Main$optPurple = A3(_user$project$GraphicSVG$rgb, 144, 103, 167);
var _user$project$Main$optOrange = A3(_user$project$GraphicSVG$rgb, 225, 151, 76);
var _user$project$Main$optGreen = A3(_user$project$GraphicSVG$rgb, 132, 186, 91);
var _user$project$Main$optBlue = A3(_user$project$GraphicSVG$rgb, 114, 147, 203);
var _user$project$Main$optRed = A3(_user$project$GraphicSVG$rgb, 211, 94, 95);
var _user$project$Main$view = function (model) {
	var t = model.t;
	return A3(
		_user$project$GraphicSVG$collage,
		1000,
		500,
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_user$project$GraphicSVG$move,
				{ctor: '_Tuple2', _0: 0, _1: 150},
				A3(
					_user$project$GraphicSVG$outlined,
					_user$project$GraphicSVG$solid(2),
					_user$project$GraphicSVG$pink,
					_user$project$GraphicSVG$centered(
						A2(
							_user$project$GraphicSVG$customFont,
							'Helvetica',
							A2(
								_user$project$GraphicSVG$size,
								40,
								_user$project$GraphicSVG$text('#JustMillennialThings')))))),
				A2(
				_user$project$GraphicSVG$move,
				{ctor: '_Tuple2', _0: -40, _1: 0},
				A4(
					_user$project$Main$piechart,
					t,
					_elm_lang$core$Native_List.fromArray(
						[
							{ctor: '_Tuple3', _0: 'Suh dude - 11%', _1: 0.11, _2: _user$project$Main$optRed},
							{ctor: '_Tuple3', _0: 'Hashtags - 12 %', _1: 0.12, _2: _user$project$Main$optBlue},
							{ctor: '_Tuple3', _0: 'Fake 90\'s Nostalgia - 6%', _1: 6.0e-2, _2: _user$project$Main$optGreen},
							{ctor: '_Tuple3', _0: 'Fam - 31%', _1: 0.31, _2: _user$project$Main$optPurple},
							{ctor: '_Tuple3', _0: 'It\'s lit - 38%', _1: 0.38, _2: _user$project$Main$optOrange},
							{ctor: '_Tuple3', _0: 'Other - 2%', _1: 2.0e-2, _2: _user$project$Main$optGold}
						]),
					0,
					{ctor: '_Tuple2', _0: 180, _1: 65}))
			]));
};
var _user$project$Main$model = {t: 0};
var _user$project$Main$GameTick = F2(
	function (a, b) {
		return {ctor: 'GameTick', _0: a, _1: b};
	});
var _user$project$Main$main = {
	main: A2(
		_user$project$GraphicSVG$gameApp,
		_user$project$Main$GameTick,
		{model: _user$project$Main$model, view: _user$project$Main$view, update: _user$project$Main$update})
};

var _user$project$Main$borders = _elm_lang$core$Native_List.fromArray(
	[
		A2(
		_user$project$GraphicSVG$move,
		{ctor: '_Tuple2', _0: 3000, _1: 0},
		A2(
			_user$project$GraphicSVG$filled,
			_user$project$GraphicSVG$white,
			A2(_user$project$GraphicSVG$rect, 5000, 5000))),
		A2(
		_user$project$GraphicSVG$move,
		{ctor: '_Tuple2', _0: -3000, _1: 0},
		A2(
			_user$project$GraphicSVG$filled,
			_user$project$GraphicSVG$white,
			A2(_user$project$GraphicSVG$rect, 5000, 5000))),
		A2(
		_user$project$GraphicSVG$move,
		{ctor: '_Tuple2', _0: 0, _1: 2750},
		A2(
			_user$project$GraphicSVG$filled,
			_user$project$GraphicSVG$white,
			A2(_user$project$GraphicSVG$rect, 5000, 5000))),
		A2(
		_user$project$GraphicSVG$move,
		{ctor: '_Tuple2', _0: 0, _1: -2750},
		A2(
			_user$project$GraphicSVG$filled,
			_user$project$GraphicSVG$white,
			A2(_user$project$GraphicSVG$rect, 5000, 5000)))
	]);
var _user$project$Main$default = function (t) {
	return _elm_lang$core$Native_List.fromArray(
		[]);
};
var _user$project$Main$glowing = function (t) {
	var b = 0;
	var g = 100 - (100 * _elm_lang$core$Basics$abs(
		_elm_lang$core$Basics$cos(
			_elm_lang$core$Basics$degrees(t))));
	var r = 218 - (90 * _elm_lang$core$Basics$abs(
		_elm_lang$core$Basics$cos(
			_elm_lang$core$Basics$degrees(t))));
	return A3(_user$project$GraphicSVG$rgb, r, g, b);
};
var _user$project$Main$maroon = A3(_user$project$GraphicSVG$rgb, 128, 0, 0);
var _user$project$Main$getX = function (t) {
	return (0 - (4 * t)) * _elm_lang$core$Basics$cos(t);
};
var _user$project$Main$getY = function (t) {
	return (4 * t) * _elm_lang$core$Basics$sin(t);
};
var _user$project$Main$getPoint = function (t) {
	return {
		ctor: '_Tuple2',
		_0: _user$project$Main$getY(t / 10),
		_1: _user$project$Main$getX(t / 10)
	};
};
var _user$project$Main$curly = function (t) {
	return _user$project$GraphicSVG$openPolygon(
		A2(
			_elm_lang$core$List$map,
			_user$project$Main$getPoint,
			_elm_lang$core$Native_List.range(10, 130)));
};
var _user$project$Main$flames = A2(
	_user$project$GraphicSVG$curve,
	{ctor: '_Tuple2', _0: 0, _1: 0},
	_elm_lang$core$Native_List.fromArray(
		[
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: 10, _1: -8},
			{ctor: '_Tuple2', _0: 20, _1: 0}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: 10, _1: 0},
			{ctor: '_Tuple2', _0: 10, _1: 10}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: 10, _1: 15},
			{ctor: '_Tuple2', _0: 10, _1: 20}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: 10, _1: 28},
			{ctor: '_Tuple2', _0: 0, _1: 24}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: 15, _1: 30},
			{ctor: '_Tuple2', _0: 8, _1: 47}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: 10, _1: 60},
			{ctor: '_Tuple2', _0: 18, _1: 56}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: 8, _1: 72},
			{ctor: '_Tuple2', _0: -10, _1: 50}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -5, _1: 63},
			{ctor: '_Tuple2', _0: -16, _1: 78}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -22, _1: 90},
			{ctor: '_Tuple2', _0: -10, _1: 98}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -35, _1: 100},
			{ctor: '_Tuple2', _0: -36, _1: 71}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -42, _1: 95},
			{ctor: '_Tuple2', _0: -63, _1: 100}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -55, _1: 95},
			{ctor: '_Tuple2', _0: -59, _1: 70}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -65, _1: 80},
			{ctor: '_Tuple2', _0: -90, _1: 75}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -100, _1: 78},
			{ctor: '_Tuple2', _0: -100, _1: 85}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -110, _1: 70},
			{ctor: '_Tuple2', _0: -83, _1: 55}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -100, _1: 55},
			{ctor: '_Tuple2', _0: -105, _1: 50}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -125, _1: 33},
			{ctor: '_Tuple2', _0: -130, _1: 50}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -130, _1: 20},
			{ctor: '_Tuple2', _0: -105, _1: 20}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -110, _1: 20},
			{ctor: '_Tuple2', _0: -115, _1: 10}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -120, _1: -10},
			{ctor: '_Tuple2', _0: -130, _1: 0}),
			A2(
			_user$project$GraphicSVG$Pull,
			{ctor: '_Tuple2', _0: -120, _1: -20},
			{ctor: '_Tuple2', _0: -105, _1: -10})
		]));
var _user$project$Main$tail = A2(
	_user$project$GraphicSVG$move,
	{ctor: '_Tuple2', _0: 18, _1: -42},
	A2(
		_user$project$GraphicSVG$filled,
		_user$project$GraphicSVG$white,
		A2(
			_user$project$GraphicSVG$curve,
			{ctor: '_Tuple2', _0: 0, _1: 0},
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_user$project$GraphicSVG$Pull,
					{ctor: '_Tuple2', _0: 20, _1: 8},
					{ctor: '_Tuple2', _0: 30, _1: 33}),
					A2(
					_user$project$GraphicSVG$Pull,
					{ctor: '_Tuple2', _0: 32, _1: 30},
					{ctor: '_Tuple2', _0: 35, _1: 30}),
					A2(
					_user$project$GraphicSVG$Pull,
					{ctor: '_Tuple2', _0: 22, _1: -6},
					{ctor: '_Tuple2', _0: 5, _1: -11.5})
				]))));
var _user$project$Main$fireball = function (t) {
	return _user$project$GraphicSVG$group(
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_user$project$GraphicSVG$move,
				{ctor: '_Tuple2', _0: 60, _1: 0},
				A2(
					_user$project$GraphicSVG$filled,
					_user$project$Main$glowing(t),
					_user$project$Main$flames)),
				A2(
				_user$project$GraphicSVG$move,
				{ctor: '_Tuple2', _0: 10, _1: 5},
				A2(
					_user$project$GraphicSVG$rotate,
					_elm_lang$core$Basics$degrees(-90),
					A2(
						_user$project$GraphicSVG$filled,
						_user$project$Main$glowing(t),
						A2(_user$project$GraphicSVG$wedge, 55, 0.5)))),
				A2(
				_user$project$GraphicSVG$move,
				{ctor: '_Tuple2', _0: 10, _1: 10},
				A2(
					_user$project$GraphicSVG$scale,
					0.93,
					_user$project$GraphicSVG$group(
						_elm_lang$core$Native_List.fromArray(
							[
								A3(
								_user$project$GraphicSVG$outlined,
								_user$project$GraphicSVG$solid(13),
								_user$project$GraphicSVG$white,
								_user$project$Main$curly(t)),
								A2(
								_user$project$GraphicSVG$move,
								{ctor: '_Tuple2', _0: 5, _1: 0},
								A2(
									_user$project$GraphicSVG$filled,
									_user$project$GraphicSVG$white,
									_user$project$GraphicSVG$circle(8))),
								_user$project$Main$tail
							]))))
			]));
};
var _user$project$Main$slide2 = function (t) {
	return _elm_lang$core$Native_List.fromArray(
		[
			_user$project$Main$fireball(t)
		]);
};
var _user$project$Main$slide1 = function (t) {
	return _elm_lang$core$Native_List.fromArray(
		[
			A2(
			_user$project$GraphicSVG$move,
			{ctor: '_Tuple2', _0: 0, _1: 20},
			A2(
				_user$project$GraphicSVG$filled,
				_user$project$GraphicSVG$black,
				_user$project$GraphicSVG$centered(
					A2(
						_user$project$GraphicSVG$size,
						50,
						_user$project$GraphicSVG$text('Your cool title here'))))),
			A2(
			_user$project$GraphicSVG$move,
			{ctor: '_Tuple2', _0: 0, _1: -20},
			A2(
				_user$project$GraphicSVG$filled,
				_user$project$GraphicSVG$black,
				_user$project$GraphicSVG$centered(
					A2(
						_user$project$GraphicSVG$size,
						20,
						_user$project$GraphicSVG$text('Enter name here')))))
		]);
};
var _user$project$Main$slides = _elm_lang$core$Array$fromList(
	_elm_lang$core$Native_List.fromArray(
		[_user$project$Main$slide1, _user$project$Main$slide2]));
var _user$project$Main$update = F2(
	function (message, model) {
		var _p0 = message;
		switch (_p0.ctor) {
			case 'GameTick':
				return _elm_lang$core$Native_Utils.update(
					model,
					{t: _p0._0});
			case 'NextSlide':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						t: 0,
						idx: A2(
							_elm_lang$core$Basics$min,
							model.idx + 1,
							_elm_lang$core$Array$length(_user$project$Main$slides) - 1)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						t: 0,
						idx: A2(_elm_lang$core$Basics$max, model.idx - 1, 0)
					});
		}
	});
var _user$project$Main$model = {t: 0, idx: 0};
var _user$project$Main$LastSlide = {ctor: 'LastSlide'};
var _user$project$Main$NextSlide = {ctor: 'NextSlide'};
var _user$project$Main$detectors = _elm_lang$core$Native_List.fromArray(
	[
		A2(
		_user$project$GraphicSVG$notifyTap,
		_user$project$Main$NextSlide,
		A2(
			_user$project$GraphicSVG$move,
			{ctor: '_Tuple2', _0: 2500, _1: 0},
			A2(
				_user$project$GraphicSVG$makeTransparent,
				0,
				A2(
					_user$project$GraphicSVG$filled,
					_user$project$GraphicSVG$white,
					A2(_user$project$GraphicSVG$rect, 5000, 5000))))),
		A2(
		_user$project$GraphicSVG$notifyTap,
		_user$project$Main$LastSlide,
		A2(
			_user$project$GraphicSVG$move,
			{ctor: '_Tuple2', _0: -2500, _1: 0},
			A2(
				_user$project$GraphicSVG$makeTransparent,
				0,
				A2(
					_user$project$GraphicSVG$filled,
					_user$project$GraphicSVG$black,
					A2(_user$project$GraphicSVG$rect, 5000, 5000)))))
	]);
var _user$project$Main$view = function (model) {
	var slide = A2(
		_elm_lang$core$Maybe$withDefault,
		_user$project$Main$default,
		A2(_elm_lang$core$Array$get, model.idx, _user$project$Main$slides));
	var t = model.t;
	return A3(
		_user$project$GraphicSVG$collage,
		1000,
		500,
		A2(
			_elm_lang$core$Basics_ops['++'],
			slide(t),
			A2(_elm_lang$core$Basics_ops['++'], _user$project$Main$borders, _user$project$Main$detectors)));
};
var _user$project$Main$GameTick = F2(
	function (a, b) {
		return {ctor: 'GameTick', _0: a, _1: b};
	});
var _user$project$Main$main = {
	main: A2(
		_user$project$GraphicSVG$gameApp,
		_user$project$Main$GameTick,
		{model: _user$project$Main$model, view: _user$project$Main$view, update: _user$project$Main$update})
};
